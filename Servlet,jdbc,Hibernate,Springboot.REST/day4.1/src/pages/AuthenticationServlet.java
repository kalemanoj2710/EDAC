package pages;

import java.io.IOException;
import java.io.PrintWriter;
import java.sql.SQLException;

import javax.servlet.ServletConfig;
import javax.servlet.ServletException;
import javax.servlet.annotation.WebServlet;
import javax.servlet.http.Cookie;
import javax.servlet.http.HttpServlet;
import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;

import dao.CustomerDaoImpl;
import pojos.Customer;

/**
 * Servlet implementation class AuthenticationServlet
 */
@WebServlet(value="/validate",loadOnStartup = 1)
public class AuthenticationServlet extends HttpServlet {
	private static final long serialVersionUID = 1L;
	private CustomerDaoImpl customerDao;

	/**
	 * @see Servlet#init(ServletConfig)
	 */
	public void init() throws ServletException {
		//create dao instance
		try {
			customerDao=new CustomerDaoImpl();
		} catch (Exception e) {
			//re throw the exc to the caller (WC) : to inform failure of init
			throw new ServletException("err in init : "+getClass().getName(), e);
		}
	}

	/**
	 * @see Servlet#destroy()
	 */
	public void destroy() {
		try {
			customerDao.cleanUp();
		} catch (SQLException e) {
			// TODO Auto-generated catch block
//			e.printStackTrace(); : sufficient!
			throw new RuntimeException("err in destroy : "+getClass().getName(), e);
		}
	}

	/**
	 * @see HttpServlet#doPost(HttpServletRequest request, HttpServletResponse response)
	 */
	protected void doPost(HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException {
		//set cont type 
		response.setContentType("text/html");
		//get writer : PW
		try(PrintWriter pw=response.getWriter())
		{
			//read request data : em , password from clnt 's request
			//API of ServletRequest : public String getParameter(String name)
			String email=request.getParameter("em");
			String password=request.getParameter("pass");
			System.out.println("in do-post "+email+" "+password);
			//invoke dao's method for authentication
			Customer customer = customerDao.authenticateUser(email, password);
			if(customer == null)
			{
				//failed login : send a mesg n retry link
				pw.print("<h5>Invalid Login , Please <a href='login.html'>Retry</a></h5>");
				
			}
			else {
				//create a cookie to store authenticated clnt details
				Cookie c1=new Cookie("clnt_details",customer.toString());//server side heap
				//add a cookie in the resp header
				response.addCookie(c1);
				//success
	//			pw.print("<h5>Successful  Login mesg from Auth servlet </h5>");
	//			pw.flush(); un comment this to check IllegalStateExc
//				pw.print("<h5> Customer Details : "+customer+"</h5>");
				//Use client pull (II) to navigate the clnt to the category page , in the NEXT request 
				//generated by clnt browser
				//API of HttpServletResponse :
				//public void sendRedirect(String redirectLocation) throws IOExc.
				response.sendRedirect("category");
				//WC : generates temp redirect resp
				//SC 302 | Header : location=category, set-cookie : clnt_details value : customer's toString | body : EMPTY
				//clnt browser : sends NEW reuqest : http://host:port/day4.1/category , method=get , header :
				//cookie : clnt_details value : customer's toString
			}
			
			
		} catch (Exception e) {
			throw new ServletException("err in do-post : "+getClass().getName(), e);
		}
	}

}
